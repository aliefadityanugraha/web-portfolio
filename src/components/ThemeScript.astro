---
// This script runs before hydration to prevent FOUC (Flash of Unstyled Content)
---

<script is:inline>
  // Theme initialization script - runs immediately
  (function () {
    function getThemePreference() {
      if (typeof window === "undefined") return "light";
      if (
        typeof localStorage !== "undefined" &&
        localStorage.getItem("theme")
      ) {
        return localStorage.getItem("theme");
      }
      return window.matchMedia("(prefers-color-scheme: dark)").matches
        ? "dark"
        : "light";
    }

    function setTheme(theme) {
      if (theme === "dark") {
        document.documentElement.setAttribute("data-kb-theme", "dark");
      } else {
        document.documentElement.removeAttribute("data-kb-theme");
      }
    }

    // Apply theme immediately
    const theme = getThemePreference();
    setTheme(theme);

    // Store the theme preference
    if (typeof localStorage !== "undefined") {
      localStorage.setItem("theme", theme);
    }

    // Listen for Astro page transitions and reapply theme
    document.addEventListener("astro:page-load", () => {
      const currentTheme = localStorage.getItem("theme") || "light";
      setTheme(currentTheme);
    });

    // Apply theme before page swap to prevent flash
    document.addEventListener("astro:before-swap", (e) => {
      const currentTheme = localStorage.getItem("theme") || "light";
      if (currentTheme === "dark") {
        e.newDocument.documentElement.setAttribute("data-kb-theme", "dark");
      } else {
        e.newDocument.documentElement.removeAttribute("data-kb-theme");
      }
    });

    // Listen for theme changes from other components
    window.addEventListener("storage", (e) => {
      if (e.key === "theme") {
        setTheme(e.newValue || "light");
      }
    });
  })();
</script>
